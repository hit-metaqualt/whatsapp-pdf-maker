generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id             String       @id @default(uuid())
  username       String       @unique
  password       String
  superAdminId   String
  allowedDevices Int          @default(1)
  createdAt      DateTime     @default(now()) 

  superadmin     Superadmin   @relation(fields: [superAdminId], references: [id], onDelete: Cascade)
  devicesession  DeviceSession[]
  users          User[]

  @@index([superAdminId])
}

model DeviceSession {
  id         String   @id @default(uuid()) 
  adminId    String
  deviceInfo String
  ipAddress  String
  loginTime  DateTime @default(now())
  logoutTime DateTime?
  isActive   Boolean  @default(true)

  admin      Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@index([adminId])
}

model User {
  id              String        @id @default(uuid())
  whatsappNumber  String        @unique
  username        String?
  email           String?       @unique
  address         String?
  age             Int?
  gender          UserGender?  // âœ… Corrected enum reference
  adminId         String
  lastInteraction Int?          @default(0)
  createdAt       DateTime      @default(now()) 

  documents       Document[]
  admin           Admin         @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@index([adminId])
}

model Document {
  id         String   @id @default(uuid())
  userId     String
  type       String
  name       String
  fileUrl    String
  year       Int
  uploadedAt DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Superadmin {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  maxDevices Int      @default(1)
  createdAt  DateTime @default(now())

  admins     Admin[]
}

enum UserGender {
  Male
  Female
  Other
}
